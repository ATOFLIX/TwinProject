{% extends 'base.html.twig' %}

{% block title %}Visualisation 3D{% endblock %}

{% block body %}

    
	<script type="text/javascript">
		
		window.addEventListener('DOMContentLoaded', (function(){
			var width = window.innerWidth;
			var height = window.innerHeight;
			
			var scene = new THREE.Scene();

			var camera = new THREE.PerspectiveCamera( 80, width / height, 1, 1000 );
				camera.position.x = 10;
				camera.position.z = 20;
				scene.add( camera );

			var light = new THREE.DirectionalLight( 0xffffff, 1.5 );
				light.position.set( 1, 1, 1 ).normalize();
				scene.add( light );

			var light2 = new THREE.DirectionalLight( 0xffffff );
				light2.position.set( -1, -1, -1 ).normalize();
				scene.add( light2 );

			renderer = new THREE.WebGLRenderer();
				renderer.setSize( width, height);

			document.body.appendChild( renderer.domElement );


			var meshArray = [];
			var geometry = new THREE.CubeGeometry(2, 4, 2, 6, 6, 6);
			var geometry2 = new THREE.SphereGeometry(1.75, 20, 20);
			var geometry3 = new THREE.CubeGeometry(4, 2, 4, 6, 6, 6);

			meshArray[0] = new THREE.Mesh( geometry3, new THREE.MeshLambertMaterial( { color: Math.random() * 0xffffff } ) );
			meshArray[1] = new THREE.Mesh( geometry2, new THREE.MeshLambertMaterial( { color: Math.random() * 0xffffff } ) );
				meshArray[1].position.y = 2 * 1;
				meshArray[2] = new THREE.Mesh( geometry, new THREE.MeshLambertMaterial( { color: Math.random() * 0xffffff } ) );
				meshArray[2].position.y = 2 * 2;
			meshArray[3] = new THREE.Mesh( geometry2, new THREE.MeshLambertMaterial( { color: Math.random() * 0xffffff } ) );
				meshArray[3].position.y = 2 * 3;
			meshArray[4] = new THREE.Mesh( geometry, new THREE.MeshLambertMaterial( { color: Math.random() * 0xffffff } ) );
				meshArray[4].position.y = 2 * 4;
			meshArray[5] = new THREE.Mesh( geometry2, new THREE.MeshLambertMaterial( { color: Math.random() * 0xffffff } ) );
				meshArray[5].position.y = 2 * 5;
			meshArray[6] = new THREE.Mesh( geometry, new THREE.MeshLambertMaterial( { color: Math.random() * 0xffffff } ) );
				meshArray[6].position.y = 2 * 5;
			meshArray[6].position.z = 2;
			meshArray[6].rotation.x = Math.PI/2;

			for( var i = 0; i < 7; i++){
				scene.add( meshArray[i] );
			}


			var theta = 0;
				(function(){
					renderer.render( scene, camera );
				meshArray[6].rotation.z -= (Math.PI / 360);

					meshArray[6].position.x = Math.sin( theta * Math.PI / 360 );
					meshArray[6].position.z = Math.cos( theta * Math.PI / 360 );

					camera.lookAt( scene.position );
					theta++;
					requestAnimationFrame( arguments.callee );
				})();
			


			var getElementPosition = function(element) {
					var top = left = 0;
					do {
							top  += element.offsetTop  || 0;
							left += element.offsetLeft || 0;
							element =  element.offsetParent;
					}
					while (element);
					return {top: top, left: left};
				}
				

		}), false);
	
	</script>

{% endblock %}
